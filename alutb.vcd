$date
	Fri Jun 02 18:49:37 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alutb $end
$var wire 1 ! zout $end
$var wire 1 " v $end
$var wire 32 # outp [31:0] $end
$var wire 1 $ n $end
$var wire 3 % gin [2:0] $end
$var reg 32 & a [31:0] $end
$var reg 32 ' b [31:0] $end
$var reg 1 ( f0 $end
$var reg 1 ) f1 $end
$var reg 1 * f2 $end
$var reg 1 + f3 $end
$var reg 1 , op0 $end
$var reg 1 - op1 $end
$scope module alu $end
$var wire 32 . a [31:0] $end
$var wire 32 / b [31:0] $end
$var wire 3 0 gin [2:0] $end
$var reg 32 1 less [31:0] $end
$var reg 1 $ n $end
$var reg 32 2 sum [31:0] $end
$var reg 1 " v $end
$var reg 1 ! zout $end
$upscope $end
$scope module cont $end
$var wire 1 , aluop0 $end
$var wire 1 - aluop1 $end
$var wire 1 ( f0 $end
$var wire 1 ) f1 $end
$var wire 1 * f2 $end
$var wire 1 + f3 $end
$var reg 3 3 gout [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b10 3
b10010110 2
bx 1
b10 0
b1100100 /
b110010 .
1-
0,
0+
0*
0)
0(
b1100100 '
b110010 &
b10 %
0$
b10010110 #
0"
0!
$end
#1
1!
b0 #
b0 2
b0 '
b0 /
b0 &
b0 .
#2
1$
0!
b11111111111111111111111111110001 #
b11111111111111111111111111110001 2
b11111111111111111111111111110110 '
b11111111111111111111111111110110 /
b11111111111111111111111111111011 &
b11111111111111111111111111111011 .
#3
b11111111111111111111111111111011 #
b11111111111111111111111111111011 2
b101 &
b101 .
#4
1"
b11111111111111111111111111110000 #
b11111111111111111111111111110000 2
b1111111111111111111111111111000 '
b1111111111111111111111111111000 /
b1111111111111111111111111111000 &
b1111111111111111111111111111000 .
